name: build package and upload to PyPI

on: [workflow_dispatch]

jobs:
  build_sdist:
    name: Build source dist
    runs-on: ubuntu-latest
    steps:
    - name: Checkout library
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up Python
      uses: actions/setup-python@v5
      
    - name: Install dependencies
      run: python -m pip install build twine

    - name: Build
      run: python -m build --sdist

    - name: Check metadata
      run: python -m twine check dist/*

    - uses: actions/upload-artifact@v4
      with:
        name: cibw-sdist
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, macos-14]
    steps:
    - name: Checkout library
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.8
      if: runner.os == 'macOS' && runner.arch == 'ARM64'

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel==2.19.2

    - name: Build wheels
      run: python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_ENVIRONMENT: MACOSX_DEPLOYMENT_TARGET=10.13
        
    - uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-${{ matrix.os }}
        path: wheelhouse/*.whl

  build_windows_wheels:
    name: Wheels on windows-latest ${{ matrix.py_version }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        py_version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
    - name: Checkout library
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.py_version }}

    - run: python -m pip wheel .

    - run: mkdir wheelhouse && Move-Item uunet*.whl wheelhouse/
      
    - uses: actions/upload-artifact@v4
      with:
        name: cibw-wheels-win-${{ matrix.py_version }}
        path: wheelhouse/*.whl
        

  pypi-publish:
    name: upload release to PyPI
    needs:
    - build_sdist
    - build_wheels
    - build_windows_wheels
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
    steps:
    - name: Download artifact
      uses: actions/download-artifact@v4
      with:
        pattern: cibw-*
        path: dist
        merge-multiple: true
    - name: Publish
      uses: pypa/gh-action-pypi-publish@release/v1
