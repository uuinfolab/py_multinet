name: windows wheels test

on: [workflow_dispatch]

jobs:
  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
    steps:
    - name: Checkout library
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.8
      if: runner.os == 'macOS' && runner.arch == 'ARM64'

    - name: Install cibuildwheel
      run: python -m pip install cibuildwheel==2.19.2

    - name: Build wheels
      run: python -m cibuildwheel --output-dir wheelhouse
      env:
        CIBW_SKIP: "*-win32"
        CIBW_ENVIRONMENT: MACOSX_DEPLOYMENT_TARGET=10.13
        CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: cd wheelhouse && python -m pip cache purge && python -m pip install {wheel} && python -c "import uunet.multinet as ml ; ml.empty()"
